@article{Bertolino2020LearningtoRankVR,
  title={Learning-to-Rank vs Ranking-to-Learn: Strategies for Regression Testing in Continuous Integration},
  author={Antonia Bertolino and Antonio Guerriero and Breno Miranda and Roberto Pietrantuono and Stefano Russo},
  journal={2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)},
  year={2020},
  pages={1-12}
}
@article{DBLP:journals/corr/abs-1811-04122,
  author    = {Helge Spieker and
               Arnaud Gotlieb and
               Dusica Marijan and
               Morten Mossige},
  title     = {Reinforcement Learning for Automatic Test Case Prioritization and
               Selection in Continuous Integration},
  journal   = {CoRR},
  volume    = {abs/1811.04122},
  year      = {2018},
  url       = {http://arxiv.org/abs/1811.04122},
  eprinttype = {arXiv},
  eprint    = {1811.04122},
  timestamp = {Fri, 23 Nov 2018 12:43:51 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1811-04122.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@article{Yoo2012RegressionTM,
  title={Regression testing minimization, selection and prioritization: a survey},
  author={Shin Yoo and Mark Harman},
  journal={Softw. Test. Verification Reliab.},
  year={2012},
  volume={22},
  pages={67-120}
}
@article{elbaum2002,
author = {Elbaum, S. and Malishevsky, Alexey and Rothermel, Gregg},
year = {2002},
month = {03},
pages = {159-182},
title = {Test Case Prioritization: A Family of Empirical Studies},
volume = {28},
journal = {Software Engineering, IEEE Transactions on},
doi = {10.1109/32.988497}
}
@INPROCEEDINGS{366926,
  author={Rothermel, G. and Harrold, M.J.},
  booktitle={1993 Conference on Software Maintenance}, 
  title={A safe, efficient algorithm for regression test selection}, 
  year={1993},
  volume={},
  number={},
  pages={358-367},
  doi={10.1109/ICSM.1993.366926}}

@inproceedings{Vokolos1997PythiaAR,
  title={Pythia: a regression test selection tool based on textual differencing},
  author={Filippos I. Vokolos and Phyllis G. Frankl},
  year={1997}
}

@ARTICLE{536955,  
  author={Rothermel, G. and Harrold, M.J.},  
  journal={IEEE Transactions on Software Engineering},   
  title={Analyzing regression test selection techniques},   
  year={1996},  volume={22},  number={8},  pages={529-551},  doi={10.1109/32.536955}}

@article{10.1145/347636.348910,
  author = {Elbaum, Sebastian and Malishevsky, Alexey G. and Rothermel, Gregg},
  title = {Prioritizing Test Cases for Regression Testing},
  year = {2000},
  issue_date = {Sept. 2000},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {25},
  number = {5},
  issn = {0163-5948},
  url = {https://doi.org/10.1145/347636.348910},
  doi = {10.1145/347636.348910},
  abstract = {Test case prioritization techniques schedule test cases in an order that increases their effectiveness in meeting some performance goal. One performance goal, rate of fault detection, is a measure of how quickly faults are detected within the testing process; an improved rate of fault detection can provide faster feedback on the system under test, and let software engineers begin locating and correcting faults earlier than might otherwise be possible. In previous work, we reported the results of studies that showed that prioritization techniques can significantly improve rate of fault detection. Those studies, however, raised several additional questions: (1) can prioritization techniques be effective when aimed at specific modified versions; (2) what tradeoffs exist between fine granularity and coarse granularity prioritization techniques; (3) can the incorporation of measures of fault proneness into prioritization techniques improve their effectiveness? This paper reports the results of new experiments addressing these questions.},
  journal = {SIGSOFT Softw. Eng. Notes},
  month = {aug},
  pages = {102–112},
  numpages = {11}
}

@article{Beszdes2012CodeCR,
  title={Code coverage-based regression test selection and prioritization in WebKit},
  author={{\'A}rp{\'a}d Besz{\'e}des and Tam{\'a}s Gergely and Lajos Schrettner and Judit J{\'a}sz and Laszlo Lango and Tibor Gyim{\'o}thy},
  journal={2012 28th IEEE International Conference on Software Maintenance (ICSM)},
  year={2012},
  pages={46-55}
}

@article{Pan2021TestCS,
  title={Test Case Selection and Prioritization Using Machine Learning: A Systematic Literature Review},
  author={Rong Pan and Mojtaba Bagherzadeh and Taher Ahmed Ghaleb and Lionel Claude Briand},
  journal={ArXiv},
  year={2021},
  volume={abs/2106.13891}
}

@article{Metzler2006LinearFM,
  title={Linear feature-based models for information retrieval},
  author={Donald Metzler and W. Bruce Croft},
  journal={Information Retrieval},
  year={2006},
  volume={10},
  pages={257-274}
}

@article{Friedman2001GreedyFA,
  title={Greedy function approximation: A gradient boosting machine.},
  author={Jerome H. Friedman},
  journal={Annals of Statistics},
  year={2001},
  volume={29},
  pages={1189-1232}
}

@article{Friedman2003MultipleAR,
  title={Multiple additive regression trees with application in epidemiology},
  author={Jerome H. Friedman and Jacqueline J. Meulman},
  journal={Statistics in Medicine},
  year={2003},
  volume={22}
}

@article{lambdamart,
  author = {Burges, Christopher},
  year = {2010},
  month = {01},
  pages = {},
  title = {From ranknet to lambdarank to lambdamart: An overview},
  volume = {11},
  journal = {Learning}
}

@article{10.5555/945365.964285,
  author = {Freund, Yoav and Iyer, Raj and Schapire, Robert E. and Singer, Yoram},
  title = {An Efficient Boosting Algorithm for Combining Preferences},
  year = {2003},
  issue_date = {12/1/2003},
  publisher = {JMLR.org},
  volume = {4},
  number = {null},
  issn = {1532-4435},
  abstract = {We study the problem of learning to accurately rank a set of objects by combining a given collection of ranking or preference functions. This problem of combining preferences arises in several applications, such as that of combining the results of different search engines, or the "collaborative-filtering" problem of ranking movies for a user based on the movie rankings provided by other users. In this work, we begin by presenting a formal framework for this general problem. We then describe and analyze an efficient algorithm called RankBoost for combining preferences based on the boosting approach to machine learning. We give theoretical results describing the algorithm's behavior both on the training data, and on new test data not seen during training. We also describe an efficient implementation of the algorithm for a particular restricted but common case. We next discuss two experiments we carried out to assess the performance of RankBoost. In the first experiment, we used the algorithm to combine different web search strategies, each of which is a query expansion for a given domain. The second experiment is a collaborative-filtering task for making movie recommendations.},
  journal = {J. Mach. Learn. Res.},
  month = {dec},
  pages = {933–969},
  numpages = {37}
}

@inproceedings{xuliadarank,
  author = {Xu, Jun and Li, Hang},
  year = {2007},
  month = {07},
  pages = {391-398},
  title = {AdaRank: a boosting algorithm for information retrieval},
  journal = {Proceedings of the 30th annual international ACM SIGIR conference on research and development in information retrieval},
  doi = {10.1145/1277741.1277809}
}

@article{Busjaeger2016LearningFT,
  title={Learning for test prioritization: an industrial case study},
  author={Benjamin Busjaeger and Tao Xie},
  journal={Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  year={2016}
}